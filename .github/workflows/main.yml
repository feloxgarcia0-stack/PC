name: RDP Automático y Estable (Final)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: 1. Configurar VPS (RDP, Usuario, Sonido, Optimización y Script AHK)
        run: |
          # --- Configuración de RDP, Usuario y Sonido ---
          $Password = "P@ssw0rdFeloxPC2025!"
          net user Runner $Password /add /y
          net localgroup administrators Runner /add
          net localgroup "Remote Desktop Users" Runner /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport=3389
          Set-Service -Name Audiosrv -StartupType Automatic
          Start-Service -Name Audiosrv
          echo "RDP_USER=Runner" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RDP_PASSWORD=$Password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          # --- Optimización de Rendimiento ---
          Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects' -Name 'VisualFxSetting' -Value 2
          New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft" -Name "Edge" -Force
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Edge" -Name "HardwareAccelerationModeEnabled" -Value 0 -Type DWord -Force
          New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT" -Name "Terminal Services" -Force
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" -Name "fEnableHardwareRDP" -Value 0 -Type DWord -Force

          # --- CREACIÓN DEL SCRIPT DE AUTOHOTKEY ---
          Write-Host "Creando el script de teclado personalizado en el Escritorio..."
          # 1. Asegurarse de que la carpeta del Escritorio exista.
          New-Item -ItemType Directory -Path "C:\Users\Runner\Desktop" -Force
          # 2. Crear el archivo .ahk
          $AhkScript = @"
          ; ===================================================================
          ;        SCRIPT DE TECLADO PERSONALIZADO POR FELOX v2.0
          ; ===================================================================
          ; F1 para ACTIVAR y DESACTIVAR el script
          ; ===================================================================
          Suspend, On
          F1::Suspend, Toggle
          w::Up
          s::Down
          a::Left
          d::Right
          q::LButton
          e::RButton
          p::Shift
          l::Control
          k::Alt
          ñ::LWin
          Enter::0
          Backspace::9
          "@
          Set-Content -Path "C:\Users\Runner\Desktop\mi_teclado_v2.ahk" -Value $AhkScript
          
      - name: 2. Iniciar Túnel y Mantener Activo (Método Automático Estable)
        run: |
          Invoke-WebRequest -Uri 'https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe' -OutFile "playit.exe"
          Start-Process -FilePath ".\playit.exe" -ArgumentList "" -NoNewWindow -RedirectStandardOutput "$env:TEMP\playit.log" -RedirectStandardError "$env:TEMP\playit_error.log"
          Write-Host "Esperando 30 segundos a que playit.gg se conecte..."
          Start-Sleep -Seconds 30
          $TunnelAddress = Get-Content "$env:TEMP\playit.log" -ErrorAction SilentlyContinue | Select-String -Pattern ".*\.playit\.gg:\d{1,5}|https://playit.gg/claim/.*" | ForEach-Object { $_.Matches.Value } | Select-Object -Last 1
          if (-not $TunnelAddress) { Write-Error "Error: No se pudo obtener la dirección del túnel."; Get-Content "$env:TEMP\playit_error.log"; exit 1 }
          
          # --- LA LÓGICA CLAVE QUE RESTAURÉ ---
          # Mostramos la información y luego mantenemos este paso vivo con un bucle.
          Write-Host "================================================================="
          Write-Host "               ¡TÚNEL CREADO CON ÉXITO!"
          Write-Host "================================================================="
          Write-Host "   Dirección playit.gg: $TunnelAddress"
          Write-Host "   (Si es un enlace https, visítalo primero para reclamarlo)"
          Write-Host "   Usuario:             ${{ env.RDP_USER }}"
          Write-Host "   Contraseña:          ${{ env.RDP_PASSWORD }}"
          Write-Host "================================================================="
          Write-Host ""
          Write-Host "Este paso se mantendrá en ejecución para mantener la VPS activa."
          
          # El bucle "Keep-Alive" que mantiene este paso y el túnel activos.
          while ($true) {
            Start-Sleep -Seconds 60
          }
